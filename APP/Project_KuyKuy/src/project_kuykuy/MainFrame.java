package project_kuykuy;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import marvin.MarvinDefinitions;
import static marvin.MarvinPluginCollection.scale;
import marvin.color.MarvinColorModelConverter;
import static marvin.color.MarvinColorModelConverter.binaryToRgb;
import static marvin.color.MarvinColorModelConverter.rgbToBinary;
import marvin.gui.MarvinImagePanel;
import marvin.image.MarvinImage;
import marvin.image.MarvinImageMask;
import marvin.io.MarvinImageIO;
import marvin.plugin.MarvinImagePlugin;
import marvin.util.MarvinPluginLoader;

/**
 *
 * @author OISHI
 */
public class MainFrame extends javax.swing.JFrame {

    static {
        MarvinDefinitions.setImagePluginPath("C:/Users/OISHI/Desktop/Project/lib/marvin/plugins/image/");
    }

    private MarvinImagePlugin imagePlugin;
    private static MarvinImagePanel picFrame;
    private static MarvinImage in_img;
    private static MarvinImage backup_img;
    public static ArrayList<Integer> po_x = new ArrayList<Integer>();
    public static ArrayList<Integer> po_y = new ArrayList<Integer>();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        picFrame = new MarvinImagePanel();
        in_img = new MarvinImage();
        in_img = MarvinImageIO.loadImage("C:/Users/OISHI/Desktop/500.png");
        backup_img = MarvinImageIO.loadImage("C:/Users/OISHI/Desktop/500.png");
        picFrame.setImage(in_img);
        picScrol.setViewportView(picFrame);

    }

    public void segment_obb(int x, int y) {
        in_img.setBinaryColor(x, y, false);
        po_x.add(x);
        po_y.add(y);
//        System.out.println("x = " + x);
//        System.out.println("y = " + y);
        if (in_img.getBinaryColor(x, y + 1) == true) {
            segment_obb(x, y + 1);
        } else if (in_img.getBinaryColor(x + 1, y) == true) {
            segment_obb(x + 1, y);
        } else if (in_img.getBinaryColor(x - 1, y) == true) {
            segment_obb(x - 1, y);
        } else if (in_img.getBinaryColor(x, y - 1) == true) {
            segment_obb(x, y - 1);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        picScrol = new javax.swing.JScrollPane();
        bt_zoomin = new javax.swing.JButton();
        bt_zoomout = new javax.swing.JButton();
        bt_browse = new javax.swing.JButton();
        bt_findedge = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        picScrol.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        picScrol.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        picScrol.setAutoscrolls(true);

        bt_zoomin.setText("zoom+");
        bt_zoomin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_zoominActionPerformed(evt);
            }
        });

        bt_zoomout.setText("zoom-");
        bt_zoomout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_zoomoutActionPerformed(evt);
            }
        });

        bt_browse.setText("Browse");
        bt_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_browseActionPerformed(evt);
            }
        });

        bt_findedge.setText("หาขอบ");
        bt_findedge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_findedgeActionPerformed(evt);
            }
        });

        jButton1.setText("Test");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(picScrol, javax.swing.GroupLayout.PREFERRED_SIZE, 894, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(bt_zoomout, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bt_zoomin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_browse, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_findedge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(bt_browse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_zoomin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_zoomout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_findedge)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(picScrol, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 182, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_zoomoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_zoomoutActionPerformed

        scale(backup_img.clone(), in_img, (int) (in_img.getWidth() * 0.6));
        picFrame.update();
    }//GEN-LAST:event_bt_zoomoutActionPerformed

    private void bt_zoominActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_zoominActionPerformed

        scale(backup_img.clone(), in_img, (int) (in_img.getWidth() * 1.4));
        picFrame.update();
    }//GEN-LAST:event_bt_zoominActionPerformed

    private void bt_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_browseActionPerformed

    }//GEN-LAST:event_bt_browseActionPerformed

    private void bt_findedgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_findedgeActionPerformed
        in_img = rgbToBinary(in_img.clone(), 100);
        imagePlugin = MarvinPluginLoader.loadImagePlugin("org.marvinproject.image.morphological.boundary.jar");
        imagePlugin.process(in_img.clone(), in_img);
        in_img = binaryToRgb(in_img);
        picFrame.setImage(in_img);
        picFrame.update();

    }//GEN-LAST:event_bt_findedgeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        in_img = rgbToBinary(in_img.clone(), 100);
        imagePlugin = MarvinPluginLoader.loadImagePlugin("org.marvinproject.image.morphological.boundary.jar");
        imagePlugin.process(in_img.clone(), in_img);
        picFrame.setImage(in_img);
        picFrame.update();
        
        for (int y = 1; y < in_img.getHeight(); y++) {
            
            for (int x = 1; x < in_img.getWidth(); x++) {
                
                if (in_img.getBinaryColor(x, y) == true) {
                    segment_obb(x, y);
                }
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (Exception e) {
                }
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_browse;
    private javax.swing.JButton bt_findedge;
    private javax.swing.JButton bt_zoomin;
    private javax.swing.JButton bt_zoomout;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane picScrol;
    // End of variables declaration//GEN-END:variables
}
