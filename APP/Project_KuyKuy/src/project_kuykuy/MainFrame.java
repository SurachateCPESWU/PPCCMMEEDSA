package project_kuykuy;

import javax.swing.UIManager;
import marvin.MarvinDefinitions;
import static marvin.MarvinPluginCollection.scale;
import marvin.color.MarvinColorModelConverter;
import static marvin.color.MarvinColorModelConverter.binaryToRgb;
import static marvin.color.MarvinColorModelConverter.rgbToBinary;
import marvin.gui.MarvinImagePanel;
import marvin.image.MarvinImage;
import marvin.image.MarvinImageMask;
import marvin.io.MarvinImageIO;
import marvin.plugin.MarvinImagePlugin;
import marvin.util.MarvinPluginLoader;

/**
 *
 * @author OISHI
 */
public class MainFrame extends javax.swing.JFrame {

    static {
        MarvinDefinitions.setImagePluginPath("C:/Users/OISHI/Desktop/Project/lib/marvin/plugins/image/");
    }

    private MarvinImagePlugin imagePlugin;
    private static MarvinImagePanel picFrame;
    private static MarvinImage in_img;
    private static MarvinImage backup_img;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        picFrame = new MarvinImagePanel();
        in_img = new MarvinImage();
        in_img = MarvinImageIO.loadImage("C:/Users/OISHI/Desktop/simple-pcb-layout01.png");
        backup_img = MarvinImageIO.loadImage("C:/Users/OISHI/Desktop/simple-pcb-layout01.png");
        picFrame.setImage(in_img);
        picScrol.setViewportView(picFrame);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        picScrol = new javax.swing.JScrollPane();
        bt_zoomin = new javax.swing.JButton();
        bt_zoomout = new javax.swing.JButton();
        bt_browse = new javax.swing.JButton();
        bt_findedge = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        picScrol.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        picScrol.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        picScrol.setAutoscrolls(true);

        bt_zoomin.setText("zoom+");
        bt_zoomin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_zoominActionPerformed(evt);
            }
        });

        bt_zoomout.setText("zoom-");
        bt_zoomout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_zoomoutActionPerformed(evt);
            }
        });

        bt_browse.setText("Browse");
        bt_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_browseActionPerformed(evt);
            }
        });

        bt_findedge.setText("หาขอบ");
        bt_findedge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_findedgeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(picScrol, javax.swing.GroupLayout.PREFERRED_SIZE, 894, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(bt_zoomout, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bt_zoomin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_browse, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                    .addComponent(bt_findedge, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(bt_browse, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bt_zoomin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_zoomout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_findedge))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(picScrol, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 182, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_zoomoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_zoomoutActionPerformed

        scale(backup_img.clone(), in_img, (int) (in_img.getWidth() * 0.6));
        picFrame.update();
    }//GEN-LAST:event_bt_zoomoutActionPerformed

    private void bt_zoominActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_zoominActionPerformed

        scale(backup_img.clone(), in_img, (int) (in_img.getWidth() * 1.4));
        picFrame.update();
    }//GEN-LAST:event_bt_zoominActionPerformed

    private void bt_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_browseActionPerformed

    }//GEN-LAST:event_bt_browseActionPerformed

    private void bt_findedgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_findedgeActionPerformed
        in_img = rgbToBinary(in_img.clone(), 100);
        imagePlugin = MarvinPluginLoader.loadImagePlugin("org.marvinproject.image.morphological.boundary.jar");
        imagePlugin.process(in_img.clone(), in_img);
        in_img = binaryToRgb(in_img);
        picFrame.setImage(in_img);
        picFrame.update();

    }//GEN-LAST:event_bt_findedgeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (Exception e) {
                }

                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_browse;
    private javax.swing.JButton bt_findedge;
    private javax.swing.JButton bt_zoomin;
    private javax.swing.JButton bt_zoomout;
    private javax.swing.JScrollPane picScrol;
    // End of variables declaration//GEN-END:variables
}
